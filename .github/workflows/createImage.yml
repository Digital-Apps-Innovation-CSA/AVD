name: Azure Image Builder - Build and Publish Image Template

on:
  workflow_dispatch:
  push:
     branches:
        - develop

env:
  Image_RG: testrvr2
  Template_Name: TemplateImgRVR
  Host_RG: newavd
  Host_Pool: hp-m2cavd
  VM_RG: newavd

jobs:
  ImageBuilderDeploy:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.deploy.outputs.IMAGE_ID }}
    steps:   
    - uses: actions/checkout@v4
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Azure Image Builder Infrastructure
      id: deploy
      run: |
          IMAGE_ID=$(az deployment group create --template-file ./CustomImage/main.bicep --resource-group $Image_RG --parameters ./CustomImage/parameters.storageplusvgInfo.json --query properties.outputs.IMAGE_ID.value)
          echo "IMAGE_ID=$IMAGE_ID" >> "$GITHUB_OUTPUT"

  ImageBuilderRun:
    needs: ImageBuilderDeploy
    runs-on: ubuntu-latest
    env:
      IMG: ${{ needs.ImageBuilderDeploy.outputs.output1 }}
    steps:   
    - uses: actions/checkout@v4
    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 'Run Azure Image Builder'
      run: |
          az image builder show -n $Template_Name -g $Image_RG
          echo $IMG
#          az image builder run -n $Template_Name -g $Image_RG --no-wait --verbose
#          az image builder wait -n $Template_Name -g $Image_RG --custom "lastRunStatus.runState!='Running'" --verbose

  VmCreation:
    needs: [ImageBuilderDeploy, ImageBuilderRun]
    runs-on: ubuntu-latest
  
    steps:   
        - uses: actions/checkout@v4
        - name: Azure login
          uses: azure/login@v2
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      
        - name: Get Token
          id: gettoken
          run: |
                 az desktopvirtualization hostpool update \
                 --name $Host_Pool \
                 --resource-group $Host_RG \
                 --registration-info expiration-time=$(date -d '+24 hours' --iso-8601=ns) registration-token-operation="Update"
      
                  tokenhp=$(az desktopvirtualization hostpool retrieve-registration-token --name $Host_Pool --resource-group $Host_RG --query token --output tsv)
      
                  echo "tokenhp=$tokenhp" >> "$GITHUB_OUTPUT"
    
        - uses: cschleiden/replace-tokens@v1
          with:
           tokenPrefix: '#{'
           tokenSuffix: '}#'
           files: './AVD_Deploy/parameterssessionhosts.jsonc'
          env:
           HOST_TOKEN: ${{ steps.gettoken.outputs.tokenhp }}
           VNETID: ${{ secrets.VNETID }}
           DOMAIN: ${{ secrets.DOMAIN }}
           DOMAINJOINACCOUNT : ${{ secrets.DOMAINJOINACCOUNT }}
           DOMAINJOINACCOUNTPASSWORD : ${{ secrets.DOMAINJOINACCOUNTPASSWORD }}
           LOCALADMINUSERNAME: ${{ secrets.LOCALADMINUSERNAME }}
           LOCALADMINUSERPASSWORD: ${{ secrets.LOCALADMINUSERPASSWORD }}
           IMAGE_ID: '/subscriptions/77f3c458-6e3c-4680-9dcc-168faba5ca00/resourceGroups/testrvr2/providers/Microsoft.Compute/galleries/galleryrvr001/images/myImage/versions/3.0.1'
    
    
        - name: Deploy Azure Image Builder Infrastructure
          run: |
               az deployment group create \
                         --template-file ./AVD_Deploy/mainsessionhosts.bicep \
                         --resource-group $VM_RG \
                         --parameters ./AVD_Deploy/parameterssessionhosts.jsonc        
        
        - name: Clean up Template
          run: |
              az image builder delete -n $Template_Name -g $Image_RG --verbose